[workspace]

members = [
   "common/api",
   "common/logger",
   "common/metrics",
   "common/parser",
   "common/types",
   "collector/common",
   "collector/email",
   "collector/jmespath",
   "collector/json",
   "engine/matcher",
   "executor/common",
   "executor/archive",
   "executor/director",
   "executor/elasticsearch",
   "executor/foreach",
   "executor/icinga2",
   "executor/logger",
   "executor/monitoring",
   "executor/script",
   "executor/smart_monitoring_check_result",
   "network/common",
   "network/simple",
   "spike/rsyslog_collector_writer",
   "spike/tornado_events_generator",
   "tornado/common",
   "tornado/email_collector",
   "tornado/engine",
   "tornado/engine_api",
   "tornado/engine_api_dto",
   "tornado/icinga2_collector",
   "tornado/nats_json_collector",
   "tornado/rsyslog_collector",
   "tornado/webhook_collector",
   "tornado/sms_collector",
   "tornado-input-validation"
]

# Link-time optimization (LTO) is a feature that lets the optimizer run on the entire program at once
# (including all its external crates), instead of just one crate at a time. This can produce better-optimized code
# However, it can take a very long time and use a huge amount of memory during compilation, so it is disabled by default.
[profile.release]
debug = true
#lto = true

[profile.release.package.tornado-input-validation]
opt-level = "z"
debug = false

# To perform a CPU specific build, launch cargo with RUSTFLAGS='-C target-cpu=native'
# E.g.:
# > RUSTFLAGS='-C target-cpu=native' cargo bench
[profile.bench]
debug = true
# When lto is enabled the profiler results are less clear.
# It should be taken into account a performance penalty of at least the 15% without the lto.
#lto = true

[workspace.dependencies]

# Important: Always keep the versions of these two in sync in order to prevent
# bugs in the tornado carbon frontend. In case of update rememeber to rebuild also tornado fronted.
regex-syntax = "0.7.4"
regex = "1.9.1"

serde = { version = "1.0", features = ['derive'] }
serde_json = "1.0"